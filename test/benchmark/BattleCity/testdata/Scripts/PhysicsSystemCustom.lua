---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by goforbroke.
--- DateTime: 2/18/24 3:47 PM
---

require "math"

PhysicsSystemCustom = LuaBehaviour:new()

MIN_DISTANCE = 10.0

function PhysicsSystemCustom:Update()
    local obstacles = Object.FindObjectsOfType(Obstacle)
    local tanks = Object.FindObjectsOfType(Tank)

    for _, tk in pairs(tanks) do
        local distance = 10000000
        local obstacle

        for _, ob in pairs(obstacles) do
            if PhysicsSystemCustom.detectCollisionInXZ(tk.transform.position, ob.transform.position) then
                local currDistance = tk.transform.position:Distance(ob.transform.position)
                if currDistance < distance then
                    distance = currDistance
                    obstacle = ob
                end
            end
        end

        if obstacle ~= nil then
            Debug.Log("Collision between " .. tk.gameObject.name .. " and " .. obstacle.gameObject.name)

            -- tank x      = 51
            -- obstacle x  = 60
            -- horDistance = -9
            -- horDir      = -1

            local horDistance = tk.transform.position.x - obstacle.transform.position.x
            if horDistance ~= 0.0 then
                local horDir = horDistance / math.abs(horDistance)
                if math.abs(horDistance) < MIN_DISTANCE then
                    local horMoveLen = MIN_DISTANCE - math.abs(horDistance)
                    if horMoveLen < 1.0 then
                        local move = Vector3:new(horDir * horMoveLen, 0.0, 0.0)
                        tk.transform:Translate(move, Space.World)
                        Debug.Log("Push away " .. tk.gameObject.name .. " for " .. move.x .. " in X")
                    end
                end
            end

            local verDistance = tk.transform.position.z - obstacle.transform.position.z
            if verDistance ~= 0.0 then
                local verDir = verDistance / math.abs(verDistance)
                if math.abs(verDistance) < MIN_DISTANCE then
                    local verMoveLen = MIN_DISTANCE - math.abs(verDistance)
                    if verMoveLen < 1.0 then
                        local move = Vector3:new(0.0, 0.0, verDir * verMoveLen)
                        tk.transform:Translate(move, Space.World)
                        Debug.Log("Push away " .. tk.gameObject.name .. " for " .. move.z .. " in Z")
                    end
                end
            end
        end
    end

end

function PhysicsSystemCustom.detectCollisionInXZ(pos1 --[[Vector3]], pos2 --[[Vector3]])
    local halfSize = MIN_DISTANCE
    if pos1.x + halfSize >= pos2.x           -- r1 right edge past r2 left
            and pos1.x <= pos2.x + halfSize   -- r1 left edge past r2 right
            and pos1.z + halfSize >= pos2.z   -- r1 top edge past r2 bottom
            and pos1.z <= pos2.z + halfSize   -- r1 bottom edge past r2 top
    then
        return true
    end
    return false
end
