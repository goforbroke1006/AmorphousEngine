---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by goforbroke.
--- DateTime: 1/14/24 12:32 PM
---

--- https://docs.unity3d.com/ScriptReference/Object.html
Object = {
    __instanceID = -1,
}

function Object:new(__instanceID --[[integer]])
    __instanceID = __instanceID or -1

    obj = {
        __instanceID = __instanceID,
    }

    self.__index = self
    setmetatable(obj, self)

    return obj
end

function Object:IsA(className --[[string]])
    return className == "Object"
end

--- https://docs.unity3d.com/ScriptReference/Object.GetInstanceID.html
--- int Returns the instance ID of the object.
function Object:GetInstanceID()
    return self.__instanceID;
end

--- https://docs.unity3d.com/ScriptReference/Object.ToString.html
--- string The name returned by ToString.
function Object:ToString()
    -- TODO: implement me
    return ""
end

--- https://docs.unity3d.com/ScriptReference/Object.Destroy.html
--- Removes a GameObject, component or asset.
--- obj     The object to destroy.
--- t       The optional amount of time to delay before destroying the object.
Object.Destroy = function(obj --[[Object]], t)
    t = t or 0.0

    if obj == nil then
        return
    end

    -- TODO: implement me

    -- TODO: find in __all_game_objects and disable forever
    -- TODO: find in __all_components and disable forever

    -- Debug.LogError("Object.Destroy: implement me")

    for key, cmp in pairs(__all_components) do
        if cmp.gameObject.__instanceID == obj.__instanceID then
            -- Debug.Log("Remove component " .. key)
            __all_components[key] = nil
        end
    end

    Debug.Log("Remove gameObject " .. obj.__instanceID)
    __all_game_objects[obj.__instanceID] = nil
end

--- https://docs.unity3d.com/ScriptReference/Object.Instantiate.html
Object.Instantiate = function(original --[[GameObject]], arg1, arg2, arg3)
    if original == nil then
        Debug.LogError("'original' should not be nil")
        return
    end

    if not original:IsA("GameObject") then
        Debug.LogError("'original' should be GameObject")
        return
    end

    if __scene_next_game_object_instance_id == nil then
        __scene_next_game_object_instance_id = table_length(__all_game_objects)
    end

    local instance = nil

    if arg1 == nil and arg2 == nil and arg3 == nil then
        --- public static Object Instantiate(Object original);

        instance = GameObject:new(
                __scene_next_game_object_instance_id,
                original.name .. " (Clone)"
        )
        __all_game_objects[instance.__instanceID] = instance;

        instance.transform.position:Set(
                original.transform.position.x,
                original.transform.position.y,
                original.transform.position.z
        )
        instance.transform.rotation:Set(
                original.transform.rotation.x,
                original.transform.rotation.y,
                original.transform.rotation.z,
                original.transform.rotation.w
        )
        instance.transform.localScale:Set(
                original.transform.localScale.x,
                original.transform.localScale.y,
                original.transform.localScale.z
        )
    elseif arg1 ~= nil and arg1:IsA("Transform") and arg2 == nil and arg3 == nil then
        --- public static Object Instantiate(Object original, Transform parent);

        instance = GameObject:new(
                __scene_next_game_object_instance_id,
                original.name .. " (Clone)"
        )
        __all_game_objects[instance.__instanceID] = instance;

        instance.transform.position:Set(
                arg1.position.x,
                arg1.position.y,
                arg1.position.z
        )
        instance.transform.rotation:Set(
                arg1.rotation.x,
                arg1.rotation.y,
                arg1.rotation.z,
                arg1.rotation.w
        )
        instance.transform.localScale:Set(
                arg1.localScale.x,
                arg1.localScale.y,
                arg1.localScale.z
        )
    elseif arg1 ~= nil and arg1:IsA("Transform") and type(arg2) == "bool" and arg3 == nil then
        --- public static Object Instantiate(Object original, Transform parent, bool instantiateInWorldSpace);

        -- TODO: implement me
        Debug.LogError("implement me")
    elseif arg1 ~= nil and arg1:IsA("Vector3") and arg2 ~= nil and arg2:IsA("Quaternion") and arg3 == nil then
        --- public static Object Instantiate(Object original, Vector3 position, Quaternion rotation);

        instance = GameObject:new(
                __scene_next_game_object_instance_id,
                original.name .. " (Clone)"
        )
        __all_game_objects[instance.__instanceID] = instance;

        instance.transform.position:Set(
                arg1.x,
                arg1.y,
                arg1.z
        )
        instance.transform.rotation:Set(
                arg2.x,
                arg2.y,
                arg2.z,
                arg2.w
        )
        instance.transform.localScale:Set(
                original.transform.localScale.x,
                original.transform.localScale.y,
                original.transform.localScale.z
        )
    elseif arg1 ~= nil and arg1:IsA("Vector3") and arg2 ~= nil and arg2:IsA("Quaternion") and arg3 ~= nil and arg3:IsA("Transform") then
        --- public static Object Instantiate(Object original, Vector3 position, Quaternion rotation, Transform parent);

        -- TODO: implement me
        Debug.LogError("implement me")
    else
        Debug.LogError("Unexpected signature")
        return nil
    end

    -- create components for new instance
    --if instance ~= nil then
    for _, cmp in pairs(original.__components) do
        local cmpKey = '' .. instance.__instanceID .. ' :: ' .. cmp.__name
        Debug.Log("Create component: " .. cmpKey)
        __all_components[cmpKey] = LuaBehaviour.__make_clone(cmp)
        __all_components[cmpKey].__name = cmp.__name
        __all_components[cmpKey].enabled = true
        __all_components[cmpKey].gameObject = instance
        __all_components[cmpKey].transform = instance.transform

        __all_components[cmpKey]['Update'] = cmp['Update']
    end
    --end

    __scene_next_game_object_instance_id = __scene_next_game_object_instance_id + 1
    Debug.Log("Create new object: " .. instance.__instanceID)

    return instance
end
