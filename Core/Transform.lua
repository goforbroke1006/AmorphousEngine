---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by goforbroke.
--- DateTime: 12/30/23 1:51 AM
---

require 'Core/Space'
require 'Core/Vector3'
require 'Core/Quaternion'

Transform = {
    position = Vector3:new(0.0, 0.0, 0.0),
    rotation = Quaternion:new(0.0, 0.0, 0.0, 0.0),
    localScale = Vector3:new(1.0, 1.0, 1.0),
}

function Transform:new()
    tr = {
        position = Vector3:new(0.0, 0.0, 0.0),
        rotation = Quaternion:new(0.0, 0.0, 0.0, 0.0),
        localScale = Vector3:new(1.0, 1.0, 1.0),
    }

    self.__index = self
    setmetatable(tr, self)

    return tr
end

--- Moves the transform in the direction and distance of translation.
--- https://docs.unity3d.com/ScriptReference/Transform.Translate.html
function Transform:Translate(translation --[[Vector3]], relativeTo)
    --if (type(translation) ~= "Vector3") then
    --    error("translation has incompatible type " .. type(translation))
    --end

    if translation:magnitude() == 0.0 then
        -- zero movement has no impact
        return
    end

    relativeTo = relativeTo or Space.Self

    if (relativeTo == Space.Self) then
        translation = self.rotation * translation
    end

    self.position.x = self.position.x + translation.x
    self.position.y = self.position.y + translation.y
    self.position.z = self.position.z + translation.z
end

function Transform:Rotate(angleX, angleY, angleZ, relativeTo)
    relativeTo = relativeTo or Space.Self
    -- TODO: implement me
    -- print('  Transform :: Rotate(' .. angleX .. ', ' .. angleY .. ', ' .. angleZ .. ', ' .. relativeTo .. ')')
end

function Transform:LookAt(target --[[Transform]], worldUp --[[Vector3]])
    worldUp = worldUp or Vector3.up
    -- TODO: implement me
    --print('  Transform :: LookAt(target, ' .. worldUp .. ')')
end
